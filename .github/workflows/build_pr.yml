name: BT Org Build and Test

on:
    workflow_call:
        inputs:
            build-target-path:
                required: true
                type: string
        secrets:
            nuget-source-access-token:
                required: true
            nuget-source-url:
                required: true
    pull_request:
        branches: [$default-branch, dev, test]

jobs:
    build_and_test:
        runs-on: windows-latest
        steps:
            - uses: actions/checkout@v2
              with:
                fetch-depth: 0

            - name: Setup .NET
              uses: actions/setup-dotnet@v1
              with:
                  dotnet-version: 6.0.x
                  source-url: ${{ secrets.nuget-source-url }}
              env:
                  NUGET_AUTH_TOKEN: ${{ secrets.nuget-source-access-token }}

            - name: Restore dependencies
              run: dotnet restore ${{ inputs.build-target-path }}

            - name: Build
              run: dotnet build --no-restore ${{ inputs.build-target-path }}

            - name: Clear coverage directory
              run: |
                    if(Test-Path -Path .\coverage) {
                        Get-ChildItem -Path .\coverage -Include *.* -Recurse | foreach {$_.Delete()}
                    }

            - name: Test
              run: dotnet test --no-build --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./coverage ${{ inputs.build-target-path }} 
              
            - name: PR Metrics
              uses: microsoft/PR-Metrics@v1.5.7
              env:
                  PR_METRICS_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  continue-on-error: false
                  base-size: 200
                  growth-rate: 2.0
                  test-factor: 0.0
            - name: Merge Reports
              uses: danielpalme/ReportGenerator-GitHub-Action@5.1.26
              with:
                reports: .\coverage\**\*.xml
                targetdir: .\coveragereport
                reporttypes: HtmlInline;Cobertura
                toolpath: 'reportgeneratortool' 
            - name: Pre-processing Coverage Report
              run: |
                    $xmlDoc = [xml](Get-Content .\coveragereport\Cobertura.xml)
                    $xmldoc.coverage.packages.package.classes.class | 
                    foreach { 
                      $_.filename = 'src/' + $_.filename.split("src/")[1];

                      Write-Host $_.filename;
                    }
                    $xmlDoc.Save("$pwd\coverage.xml")
            
            - name: Publish coverage report for changed files
              uses: 5monkeys/cobertura-action@master
              with:
                repo_token: ${{ secrets.GITHUB_TOKEN }}
                path: .coverage.xml
                skip_covered: false
                minimum_coverage: 80
                show_line: true
                show_missing: true
                only_changed_files: true
                report_name: Changed files code coverage
                show_branch: true
                link_missing_lines: true
                fail_below_threshold: false
              continue-on-error: false
            
            - name: Upload coverage report artifact
              uses: actions/upload-artifact@v2.2.3
              with:
                name: CoverageReport # Artifact name        
                path: coveragereport # Directory containing files to upload